(ns student.euler.e45)

(comment "
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	Pn=n(3n1)/2	 	1, 5, 12, 22, 35, ...
Hexagonal	 	Hn=n(2n1)	 	1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.")

(defn triangle-numbers [] ;simple def would hold on to head and cache
  (map (fn [n] (/ (* (+ n 1) n) 2))
       (iterate inc 1)))



(defn pentagonal? [p]
  "3n^2-n-2p=0 -> good if the solution is integer"
  (zero? (rem (+ 1 (Math/sqrt (+ 1 (* 24 p)))) 6)))


(defn hexagonal? [h]
  "2n^2-n-h=0 -> good if the solution is integer"
  (zero? (rem (+ 1 (Math/sqrt (+ 1 (* 8 h)))) 4)))

(defn e45 []
  (first 
    (drop-while #(<= % 40755)
                (filter #(and (hexagonal? %)
                              (pentagonal? %))
                        (triangle-numbers)))))

(assert (= (e45) ))